-- форматирование номера телефона:
-- убираем все нецифровые символы
-- если цифр нет, возвращаем пустую строку
-- если цифр 10, добавляем в начало '7'
-- если цифр 11 и в начале стоит 8, заменяем первый символ на 7
-- если цифр 11 и в начале стоит 7095, заменяем начало на 7495
-- если цифр 11 и в начале стоит 7, номер корректный - возвращаем его
-- все оставшиеся случаи - некорректный номер, добавляем до 12 значами подчеркивания и возвращаем строку, это явно ошибка (будет учтено в статусе "Телефон некорректный")

-- таким образом:
-- 1. если возвращается пустая строка, телефон отсутствует
-- 2. если возвращается строка с длиной > 11, телефон некорректный
-- 3. если возвращается строка с длиной = 11, телефон корректный
create or replace function ais.sms_pFormatPhone(pPhone in varchar) returns varchar as $BODY$
declare
    vPhone varchar(60);
begin
    -- убираем все нецифровые символы
    vPhone := REGEXP_REPLACE(pPhone,'[^0-9]','','g');

    -- если цифр нет, возвращаем пустую строку
    if (vPhone is NULL) then 
       return vPhone;  
    end if;

    -- если цифр 10, добавляем в начало 7
    if (length(vPhone) = 10) then 
       vPhone := '7' || vPhone;  
    end if;

    -- если цифр 11 и в начале стоит 8, заменяем первый символ на 7
    if (length(vPhone) = 11) and (substr(vPhone, 1, 1) = '8') then 
       vPhone := '7' || substr(vPhone, 2, 10); 
    end if;

    -- если цифр 11 и в начале стоит 7095, заменяем начало на 7495
    if (length(vPhone) = 11) and (substr(vPhone, 1, 4) = '7095') then 
       vPhone := '7495' || substr(vPhone, 5, 7); 
    end if;

    -- если цифр 11 и в начале стоит 7, номер корректный - возвращаем его
    if (length(vPhone) = 11) and (substr(vPhone, 1, 1) = '7') then 
       return vPhone; 
    end if;

    -- все оставшиеся случаи - некорректный номер, добавляем до 12 пробелами и возвращаем строку, это явно ошибка (будет учтено в статусе "Телефон некорректный")
    vPhone := lpad(vPhone, 12, ' ');
    return vPhone;  
end;
$BODY$
language plpgsql
immutable;